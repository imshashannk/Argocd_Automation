name: CD

on:
  push:
    branches:
      - main

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKERHUB_KEY: ${{ secrets.DOCKER_KEY }}
  IMAGE_NAME: app-helm

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3
        continue-on-error: true  # Allow checkout step to continue on errors

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_KEY }}
        continue-on-error: true  # Allow Docker login to continue on errors

      # Build Docker image
      - name: Build Docker image
        run: docker build -t ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
        continue-on-error: true  # Allow Docker build to continue on errors

      # Push Docker image to Docker Hub
      - name: Push Docker image
        run: docker push ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        continue-on-error: true  # Allow Docker push to continue on errors

      # Update values.yaml with the new APP_VERSION (using the GitHub commit SHA)
      - name: Update values.yaml
        run: |
          cd helm
          sed -i 's|APP_VERSION:.*|APP_VERSION: '${{ github.sha }}'|' values.yaml
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add values.yaml
          git commit -m "Update values.yaml with latest version" || echo "No changes to commit"
          git push || echo "Push failed, likely no changes to push"
        continue-on-error: true  # Allow git update step to continue on errors

      # Display logs if there is an error
      - name: Debugging logs
        if: failure()  # Only run if a previous step has failed
        run: |
          echo "Previous steps failed. Reviewing logs..."
          echo "Docker Hub Username: ${{ env.DOCKERHUB_USERNAME }}"
          echo "Image Name: ${{ env.IMAGE_NAME }}"
